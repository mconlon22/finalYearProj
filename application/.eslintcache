[{"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\index.js":"1","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\reportWebVitals.js":"2","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\App.js":"3","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Routes.js":"4","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Calculator.js":"5","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\LeafletMap.js":"6","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\NavBar.js":"7","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\RoutingMachine.js":"8","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\Home.js":"9","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\LeafletControlGeocoder.jsx":"10","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\RiskGauge.js":"11","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\constants.js":"12","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\Graph.js":"13"},{"size":517,"mtime":1612268812055,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1612268812055,"results":"16","hashOfConfig":"15"},{"size":917,"mtime":1617050934783,"results":"17","hashOfConfig":"15"},{"size":463,"mtime":1616336663772,"results":"18","hashOfConfig":"15"},{"size":8236,"mtime":1618306726973,"results":"19","hashOfConfig":"15"},{"size":11282,"mtime":1618309919199,"results":"20","hashOfConfig":"15"},{"size":5995,"mtime":1617563829750,"results":"21","hashOfConfig":"15"},{"size":1091,"mtime":1617276836607,"results":"22","hashOfConfig":"15"},{"size":6384,"mtime":1618306941943,"results":"23","hashOfConfig":"15"},{"size":1431,"mtime":1617050934842,"results":"24","hashOfConfig":"15"},{"size":2278,"mtime":1617104674363,"results":"25","hashOfConfig":"15"},{"size":281,"mtime":1617050934859,"results":"26","hashOfConfig":"15"},{"size":1778,"mtime":1618270128427,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ug1p3x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"30"},"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\index.js",[],["65","66"],"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\reportWebVitals.js",[],"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\App.js",["67","68","69","70","71"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport LeafletMap from './components/map/LeafletMap'\r\nimport Calculator from './components/Calculator'\r\nimport React from \"react\";\r\nimport Routes from './components/Routes'\r\nimport NavBar from './components/NavBar'\r\nimport '@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css';\r\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\r\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\r\n\r\nimport {BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nfunction App() {\r\n        const routeComponents = Routes.map(({path, component}, key) => <Route exact path={path} component={component} key={key} />);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <NavBar/>\r\n      <br/>\r\n      <br/>\r\n\r\n        {routeComponents}\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Routes.js",["72"],"import React from 'react';\r\nimport Calculator from './Calculator'\r\nimport LeafletMap from './map/LeafletMap'\r\nimport Home from './Home/Home'\r\n\r\n\r\n\r\nconst Routes =[\r\n  {\r\n    path: '/',\r\n    sidebarName: 'Home',\r\n    component: Home\r\n  },\r\n   {\r\n    path: '/Map',\r\n    sidebarName: 'Go Somewhere',\r\n    component: LeafletMap\r\n  },\r\n {\r\n    path: '/Calculator',\r\n    sidebarName: 'Calculator',\r\n    component: Calculator\r\n  },\r\n\r\n  \r\n  \r\n]\r\n\r\nexport default Routes;","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Calculator.js",["73","74","75"],"\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport axios from 'axios';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {Redirect} from 'react-router-dom'\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n   button: {\r\n    marginTop: theme.spacing(2),\r\n    padding: '0 30px',\r\n      height: 60,\r\n\r\n  },\r\n}));\r\n\r\nconst Calculator=()=>{\r\n  const history = useHistory();\r\n\r\n  function getRisk(){\r\n      const params={\r\n        age: age,\r\n        height:height,\r\n        weight:weight,\r\n        smoking:smoking,\r\n        ethnicity: ethnicity,\r\n        sex:sex\r\n      }\r\n      axios.post(`http://178.62.61.92:3102/userRisk`, null, { params:params})\r\n      .then(res => {\r\n        console.log(res.data)\r\n       window.localStorage.setItem(\"userRisk\",Math.round(res.data*10)/10)\r\n       history.push(\"/\");\r\n\r\n      })\r\n    \r\n  \r\n  }\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n    const [redirect, setRedirect] = React.useState(false);\r\n\r\n    const [sex, setSex] = React.useState('');\r\n  const [height, setHeight] = React.useState('');\r\n  const [weight, setWeight] = React.useState('');\r\n  const [smoking, setSmoking] = React.useState('');\r\n  const [ethnicity, setEthnicity] = React.useState('');\r\n  \r\n  const handleAge = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleSex = (event) => {\r\n    setSex(event.target.value);\r\n  };\r\n  const handleHeight = (event) => {\r\n    setHeight(event.target.value);\r\n  };\r\n  const handleWeight = (event) => {\r\n    setWeight(event.target.value);\r\n  };\r\n  const handleSmoking = (event) => {\r\n    setSmoking(event.target.value);\r\n  };\r\n  const handleEthnicity = (event) => {\r\n    setEthnicity(event.target.value);\r\n  };\r\n\r\n     if (redirect) {\r\n       return  <Redirect  to=\"/Map\" />;\r\n     }\r\n    return (\r\n            <div>\r\n          <br/>\r\n          <Typography variant=\"h2\" component=\"h2\">Covid Risk Calculator</Typography>\r\n                   <Typography variant=\"body1\" component=\"h2\">This was developed as part of my final year project. The source code is available </Typography>\r\n\r\n\r\n<br/>\r\n<br/>\r\n\r\n      <Grid container spacing={1}>\r\n                        <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >\r\n             <Typography variant=\"body1\" component=\"h2\"> What age are you</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n       <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={age}\r\n          onChange={handleAge}\r\n        >\r\n         \r\n          <MenuItem value={20}>18–39</MenuItem>\r\n          <MenuItem value={45}>40–49</MenuItem>\r\n          <MenuItem value={55}>50–59</MenuItem>\r\n          <MenuItem value={65}>60–69</MenuItem>\r\n          <MenuItem value={75}>70–79</MenuItem>\r\n        <MenuItem value={85}>80+</MenuItem>\r\n\r\n\r\n        </Select>\r\n      </FormControl>\r\n        </Grid>\r\n <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >             <Typography variant=\"body1\" component=\"h2\"> What gender are you</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={sex}\r\n          onChange={handleSex}\r\n        >\r\n         \r\n          <MenuItem value={\"male\"}>Male</MenuItem>\r\n          <MenuItem value={\"female\"}>Female</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n        </Grid>\r\n  <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >             <Typography variant=\"body1\" component=\"h2\"> What weight are you</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Weight</InputLabel>\r\n        <Input\r\n            id=\"standard-adornment-weight\"\r\n            value={weight}\r\n            onChange={handleWeight}\r\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n            aria-describedby=\"standard-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n      </FormControl>\r\n        </Grid>\r\n <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >             <Typography variant=\"body1\" component=\"h2\"> What height are you</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n      \r\n<FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Height</InputLabel>\r\n        <Input\r\n            id=\"standard-adornment-weight\"\r\n            value={height}\r\n            onChange={handleHeight}\r\n            endAdornment={<InputAdornment position=\"end\">cm</InputAdornment>}\r\n            aria-describedby=\"standard-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n      </FormControl>\r\n        </Grid>\r\n <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >             <Typography variant=\"body1\" component=\"h2\"> What is your smoking status</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={smoking}\r\n          onChange={handleSmoking}\r\n        >\r\n         \r\n          <MenuItem value={'current'}>Current</MenuItem>\r\n          <MenuItem value={'former'}>Former</MenuItem>\r\n          <MenuItem value={'never'}>Never</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        </Grid>\r\n <Grid item sm={3} xs={0} spacing={1}  >\r\n           </Grid>\r\n            <Grid item xs={3} spacing={3} sm={3} >             <Typography variant=\"body1\" component=\"h2\"> What ethnicity are you</Typography>\r\n        </Grid>\r\n<Grid item xs={8}  sm={6}>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Ethnicity</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={ethnicity}\r\n          onChange={handleEthnicity}\r\n        >\r\n         \r\n          <MenuItem value={'white'}>white</MenuItem>\r\n          <MenuItem value={'mixed'}>mixed</MenuItem>\r\n          <MenuItem value={'south asian'}>south asian</MenuItem>\r\n                    <MenuItem value={'black'}>black</MenuItem>\r\n          <MenuItem value={'other'}>other</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n      <Grid item xs={12}>\r\n<Button   className={classes.button} variant=\"contained\" color=\"primary\" onClick={getRisk} disableElevation>\r\n  Calculate Risk\r\n</Button>\r\n        </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n    \r\n}\r\nexport default Calculator;","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\LeafletMap.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"\r\n\r\nimport React,{ Component } from 'react'\r\nimport {Map,TileLayer,Popup,Marker,GeoJSON ,Circle,Polyline} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css';\r\nimport Routing from \"./RoutingMachine\";\r\nimport * as ELG from \"esri-leaflet-geocoder\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\nimport L from \"leaflet\";\r\nimport LeafletControlGeocoder from \"./LeafletControlGeocoder\";\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\r\nimport axios from 'axios'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nvar data=null\r\nvar loaded=false\r\nfunction getData(){\r\n \r\n}\r\nfunction getMax() {\r\n    var max=0\r\n\r\n    for (var i=0 ; i<data.features.length ; i++) {\r\n        if(data.features[i].properties.P14_100k>max){\r\n            max=data.features[i].properties.P14_100k\r\n        }\r\n    }\r\n    return max;\r\n}\r\nfunction getMin() {\r\n    var min=1000\r\n\r\n    for (var i=0 ; i<data.features.length ; i++) {\r\n        \r\n        if(data.features[i].properties.P14_100k<min){\r\n            min=data.features[i].properties.P14_100k\r\n        }\r\n    }\r\n    return min;\r\n}\r\nfunction getPercent(num){\r\n  const max=getMax()\r\n  const min=getMin()\r\n  const range=max-min\r\n\r\n    var x=((num-min)/range)*100\r\n    if(num>max){x=100}\r\n    return x\r\n}\r\nfunction getGeoJSONComponent (){\r\n \r\n  return(\r\n    <GeoJSON\r\n    data={data}\r\n    color='red'\r\n    fillColor='green'\r\n    weight={1}\r\n    onEachFeature={onEachFeature} />\r\n    );\r\n    \r\n    }\r\n    var percentColors = [\r\n        { pct: 0.0, color: { r: 0xff, g: 0x00, b: 0 } },\r\n        { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },\r\n        { pct: 1.0, color: { r: 0x00, g: 0xff, b: 0 } } ];\r\n    \r\n    var getColorForPercentage = function(num) {\r\n        var perc=100-getPercent(num)\r\n            var r, g, b = 0;\r\n            if(perc < 50) {\r\n                r = 255;\r\n                g = Math.round(5.1 * perc);\r\n            }\r\n            else {\r\n                g = 255;\r\n                r = Math.round(510 - 5.10 * perc);\r\n            }\r\n            var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n            return '#' + ('000000' + h.toString(16)).slice(-6);\r\n        }\r\nfunction onEachFeature(feature, layer) {\r\n        layer.setStyle({fillColor :getColorForPercentage(feature.properties.P14_100k)}) \r\n        layer.bindPopup(`<table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tr>\r\n      <th scope=\"row\">county</th>\r\n      <td>${feature.properties.COUNTY}</td>\r\n   \r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">population</th>\r\n      <td>${feature.properties.Pop2016}</td>\r\n   \r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Cases per 100k in the last 14 days</th>\r\n      <td>${feature.properties.P14_100k}</td>\r\n   \r\n    </tr>\r\n`);\r\n    \r\n}\r\n\r\nconst from={\r\n  lat:53.3069845,lng:-6.206675120805812\r\n}\r\nconst to={\r\n  lat:53.3018309,lng:-6.179926367800741\r\n}\r\nconst fillBlueOptions = { fillColor: 'blue' }\r\n\r\nclass LeafletMap extends Component {\r\n  state={\r\n    zoom: 7,\r\n    isMapInit: false,\r\n    from:{lat:null,lng:null},\r\n    to:{lat:null,lng:null},\r\n    routeData:null,\r\n    routeCovidData:null\r\n  }\r\n  getRoutingData=()=>{\r\n   \r\n    \r\n    var routeData=[]\r\n    var routeLocationData=[]\r\n    var routes=[]\r\n    const params={\r\n      params:{\r\n        fromlat:this.state.from.lat,\r\n        fromlon:this.state.from.lng,\r\n        tolat:this.state.to.lat,\r\n        tolon:this.state.to.lng,\r\n        }}\r\n    axios.get(`http://178.62.61.92:3101/getSafestRoute`,params)\r\n      .then(res => {\r\n        res.data.map(route=>{\r\n          routeLocationData.push(JSON.parse(route))\r\n          console.log(JSON.parse(route))\r\n        })\r\n        var covidData=[]\r\n        console.log(routeLocationData.length)\r\n        for(var x=0;x<routeLocationData.length;x++){\r\n          console.log(routeLocationData[x])\r\n        covidData.push(routeLocationData[x][0].LocNames)\r\n         for(var i=1;i<routeLocationData[x][0].latlons.length-1;i++){\r\n        const from=routeLocationData[x][0].latlons[i-1]\r\n        const to=routeLocationData[x][0].latlons[i]\r\n          routeData.push({\r\n            from_lat: from.lat,\r\n            from_long:from.lon,\r\n            to_lat: to.lat,\r\n            to_long: to.lon,\r\n            id:routeLocationData[x][0].latlons[i].id\r\n          })\r\n    }\r\n    console.log('push',routeData)\r\n    routes.push(routeData)\r\n    }\r\n        console.log(routes)\r\n        this.setState({routeData:routes})\r\n                this.setState({routeCovidData:covidData})\r\n\r\n  \r\n      })\r\n    \r\n  \r\n      \r\n      \r\n    }\r\n    \r\n  \r\n  \r\n        setAddressTo=(value) =>{\r\n          geocodeByAddress(value.label)\r\n        .then(results => getLatLng(results[0]))\r\n        .then(({ lat, lng }) =>{\r\n\r\n                    if(lat!=null&&lng!=null){\r\n\r\n                this.setState({to: {lat: lat, lng: lng}},() => {\r\n                  if(this.state.from.lat!=null){\r\n                    this.getRoutingData()\r\n                  }\r\n                })\r\n                    }\r\n        })\r\n        }\r\n         setAddressFrom=(value) =>{\r\n          geocodeByAddress(value.label)\r\n        .then(results => getLatLng(results[0]))\r\n        .then(({ lat, lng }) =>{\r\n          if(lat!=null&&lng!=null){\r\n                this.setState({from: {lat: lat, lng: lng}},() => {\r\n                  if(this.state.to.lat!=null){\r\n                    this.getRoutingData()\r\n                  }\r\n                })\r\n          }\r\n        })\r\n        }\r\n\r\n       \r\n   \r\n     componentDidMount() {\r\n      axios.get(\"https://opendata.arcgis.com/datasets/27d401c9ae084097bb1f3a69b69462a1_0.geojson\").then((res)=>{\r\n        data=res.data\r\n        loaded=true\r\n      })\r\n    navigator.geolocation.getCurrentPosition((position) =>{\r\n     \r\n      this.setState({\r\n      lat: position.coords.latitude,\r\n      lon: position.coords.longitude\r\n    });\r\n\r\n    });\r\n    \r\n    const map = this.map\r\n\r\n\r\n   \r\n  \r\n\r\n   \r\n  }\r\n  \r\n    saveMap = map => {\r\n    this.map = map;\r\n    this.setState({\r\n      isMapInit: true\r\n    });\r\n   \r\n  \r\n  };\r\nrender(){\r\n  if(this.map!=null){\r\n     \r\n  }\r\n  \r\n\r\n  \r\n\r\n    return (\r\n      <div>\r\n              <br />\r\n                       \r\n\r\n              \r\n              <Grid container spacing={1}>\r\n\r\n            <Grid item sm={3} xs={12} spacing={1}  >\r\n            <Card> \r\n                  <CardContent>\r\n                            <Typography>\r\n                            Route 1\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n      <Table  aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Location</TableCell>\r\n            <TableCell align=\"right\">Covid Level Per 100k</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n\r\n\r\n       </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      {this.state.routeCovidData!=null?this.state.routeCovidData[0].map((data)=>{\r\n        return (\r\n          <TableRow key={data.ENGLISH}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {data.ENGLISH}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{data.P14_100k_T}</TableCell>\r\n          \r\n            </TableRow>\r\n        )\r\n      }):<div></div>\r\n\r\n      }\r\n\r\n      </CardContent>\r\n            </Card>\r\n\r\n              <Card> \r\n                  <CardContent>\r\n                            <Typography>\r\n                            Route 2\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n      <Table  aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Location</TableCell>\r\n            <TableCell align=\"right\">Covid Level Per 100k</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n\r\n\r\n       </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      {this.state.routeCovidData!=null?this.state.routeCovidData[1].map((data)=>{\r\n        return (\r\n          <TableRow key={data.ENGLISH}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {data.ENGLISH}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{data.P14_100k_T}</TableCell>\r\n          \r\n            </TableRow>\r\n        )\r\n      }):<div></div>\r\n\r\n      }\r\n\r\n      </CardContent>\r\n            </Card>\r\n      </Grid>\r\n            <Grid item sm={9} xs={12} spacing={1}  >\r\n             <Grid item sm={2} xs={12} spacing={1}  >\r\n            <Typography variant=\"h6\" component=\"h2\" justify=\"flex-end\">From</Typography>\r\n      </Grid>\r\n\r\n                      <GooglePlacesAutocomplete apiKey=\"AIzaSyDp3YVDuLumOSd_jdEUxeDkN4g1fkWR9Vk\" selectProps={{\r\n    \r\n          onChange: this.setAddressFrom,\r\n        }}/>\r\n                       <Grid item sm={2} xs={12} spacing={1}  >\r\n            <Typography variant=\"h6\" component=\"h2\" justify=\"flex-end\">To</Typography>\r\n      </Grid>\r\n\r\n                      <GooglePlacesAutocomplete apiKey=\"AIzaSyDp3YVDuLumOSd_jdEUxeDkN4g1fkWR9Vk\" selectProps={{\r\n    \r\n          onChange: this.setAddressTo,\r\n        }}\r\n />\r\n                            <br />\r\n                                                        <br />\r\n                            <br />\r\n                            <br />\r\n\r\n                           \r\n\r\n        <Map className='map' center={[53.305, -7.177]} zoom={8} ref={this.saveMap} scrollWheelZoom={true} >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n\r\n        <Circle center={this.state.lat!=null?[this.state.lat, this.state.lon]:[53.305, -7.177]} pathOptions={fillBlueOptions} radius={5000} />\r\n\r\n\r\n\r\n        {loaded?getGeoJSONComponent():<div></div>}   \r\n        {this.state.routeData!=null?\r\n        this.state.routeData[0].map(({id, from_lat, from_long, to_lat, to_long}) => {\r\n          return <Polyline key={id} positions={[\r\n            [from_lat, from_long], [to_lat, to_long],\r\n          ]} color={'blue'} />\r\n          }):<div></div>}  \r\n          {this.state.routeData!=null?\r\n        this.state.routeData[1].map(({id, from_lat, from_long, to_lat, to_long}) => {\r\n          return <Polyline key={id} positions={[\r\n            [from_lat, from_long], [to_lat, to_long],\r\n          ]} color={'blue'} />\r\n          }):<div></div>}  \r\n      </Map>\r\n            </Grid>\r\n\r\n      </Grid>\r\n            </div>\r\n\r\n    )\r\n\r\n    }\r\n}\r\nexport default LeafletMap","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\NavBar.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Routes from './Routes';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n    let history = useHistory();\r\n\r\n    const theme = useTheme();\r\n  const { window } = props;\r\n\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const handleClick = (route) => {\r\n      history.push(route)\r\n  }  \r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleChange}>\r\n            {theme.direction === 'left' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n                <Divider />\r\n      <List>\r\n        {Routes.map((route, index) => (\r\n          <ListItem button key={route.sidebarName}  onClick={() => handleClick(route.path)}>\r\n            {index  === 0 ?<ListItemIcon> <HomeIcon/></ListItemIcon> :null}\r\n                       {index  === 1 ?  <ListItemIcon><MapIcon/> </ListItemIcon>:null}\r\n            {index  === 2 ?<ListItemIcon> <FunctionsIcon/> </ListItemIcon>:null}\r\n\r\n            <ListItemText primary={route.sidebarName} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n     \r\n    </div>\r\n  );\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleChange}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n       \r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleChange}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n           \r\n\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n       \r\n      </nav>\r\n    </div>\r\n  );\r\n  \r\nNavBar.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\n}\r\n","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\RoutingMachine.js",[],"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\Home.js",["104","105","106","107"],"import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Chart } from 'react-charts'\r\nimport Graph from './Graph';\r\nimport RiskGauge from './RiskGauge'\r\n        import GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\n\r\n   \r\nexport default class Home extends React.Component {\r\n  state = {\r\n    covidData: [],\r\n    personalRisk:0,\r\n    locationRisk:0,\r\n    dateStr:null,\r\n    deaths:null,\r\n    cases:null,\r\n    icu:null,\r\n    totalvac:null\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    axios.get(`http://178.62.61.92:3101/getCovid`)\r\n      .then(res => {\r\n        const covidData = res.data[0];\r\n        console.log(covidData)\r\n        covidData.date=covidData.date.split('T')[0]\r\n                this.setState({ covidData });\r\n\r\n      })\r\n      axios.get('https://services1.arcgis.com/eNO7HHeQ3rUcBllm/arcgis/rest/services/CovidStatisticsProfileHPSCIreland_DailyDateView/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returnGeometry=false&outStatistics=%5B%7B%22onStatisticField%22%3A%22Date%22%2C%22outStatisticFieldName%22%3A%22Date_max%22%2C%22statisticType%22%3A%22max%22%7D%5D')\r\n      .then((res)=>{\r\n        const epoch=res.data.features[0].attributes.Date_max\r\n        var d = new Date(epoch); \r\n        const dateStr=d.toISOString().slice(0,10)\r\n        console.log(dateStr)\r\n        this.setState({dateStr})\r\n      })\r\n\r\n      axios.get('https://services1.arcgis.com/eNO7HHeQ3rUcBllm/arcgis/rest/services/Covid19StatisticsProfileHPSCIrelandView/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returnGeometry=false&outStatistics=%5B%7B%22onStatisticField%22%3A%22ConfirmedCovidCases%22%2C%22outStatisticFieldName%22%3A%22ConfirmedCovidCases_sum%22%2C%22statisticType%22%3A%22sum%22%7D%5D')\r\n      .then((res)=>{\r\n        const cases=res.data.features[0].attributes.ConfirmedCovidCases_sum\r\n        console.log('cases',cases)\r\n        \r\n        this.setState({cases})\r\n      })\r\n      axios.get('https://services1.arcgis.com/eNO7HHeQ3rUcBllm/arcgis/rest/services/Covid19StatisticsProfileHPSCIrelandView/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returnGeometry=false&outStatistics=%5B%7B%22onStatisticField%22%3A%22ConfirmedCovidDeaths%22%2C%22outStatisticFieldName%22%3A%22ConfirmedCovidDeaths_max%22%2C%22statisticType%22%3A%22max%22%7D%5D')\r\n      .then((res)=>{\r\n        const deaths=res.data.features[0].attributes.ConfirmedCovidDeaths_max\r\n        this.setState({deaths})\r\n      })\r\n      axios.get('https://services-eu1.arcgis.com/z6bHNio59iTqqSUY/arcgis/rest/services/ICUBISCurrentTimelinePublicView/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returnGeometry=false&outStatistics=%5B%7B%22onStatisticField%22%3A%22ncovidconf%22%2C%22outStatisticFieldName%22%3A%22ncovidconf_sum%22%2C%22statisticType%22%3A%22sum%22%7D%5D')\r\n      .then((res)=>{\r\n        const icuAdmis=res.data.features[0].attributes.ncovidconf_sum\r\n        \r\n        this.setState({icu:icuAdmis})\r\n      })\r\n      axios.get('https://services-eu1.arcgis.com/z6bHNio59iTqqSUY/arcgis/rest/services/Covid19_Vaccine_Administration_Hosted_View/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returnGeometry=false&outStatistics=%5B%7B%22onStatisticField%22%3A%22totalAdministered%22%2C%22outStatisticFieldName%22%3A%22totalAdministered_max%22%2C%22statisticType%22%3A%22max%22%7D%5D')\r\n      .then((res)=>{\r\n        const totalvac=res.data.features[0].attributes.totalAdministered_max\r\n        \r\n        this.setState({totalvac:totalvac})\r\n      })\r\n\r\n    }\r\n  \r\n\r\n  render() {\r\n      const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        paper: {\r\n          padding: theme.spacing(1), //grid padding\r\n          textAlign: 'left',\r\n          color: theme.palette.text.secondary,\r\n          marginLeft:0,\r\n        },\r\n      }));\r\n      const section = {\r\n  height: \"25%\",\r\n  paddingTop: 5,\r\n  backgroundColor: \"#fff\"\r\n};\r\n    return (\r\n      <div>\r\n        <br/>\r\n\r\n                  <Typography variant=\"h6\" component=\"h2\" >Your Risk Levels</Typography>\r\n            <Grid container spacing={1}>\r\n                        <Grid item sm={5} xs={0} spacing={1}  >\r\n           </Grid>\r\n\r\n            <Grid item xs={9} spacing={5} sm={7} >\r\n\r\n            <RiskGauge personalRisk={this.state.personalRisk} locationRisk={this.state.locationRisk}/>\r\n           </Grid>\r\n          \r\n            <Grid item sm={12} xs={12} spacing={1}  >\r\n          <Typography className={useStyles.paper} variant=\"h4\" component=\"h2\" >Stats {this.state.dateStr!=null?this.state.dateStr:<div></div>}</Typography>\r\n           </Grid>\r\n            <Grid item xs={3} spacing={1} sm={6} >\r\n           </Grid>\r\n             <Grid item xs={6} spacing={1} sm={12}>\r\n          <Typography variant=\"h6\" component=\"h2\" >Cases:                {this.state.cases!=null?this.state.cases:<div></div>}</Typography>\r\n           </Grid>\r\n            <Grid item xs={12} spacing={1} sm={12}>\r\n          <Typography variant=\"h6\" component=\"h2\" >ICU Admissions:  {this.state.icu!=null?this.state.icu:<div></div>}</Typography>\r\n           </Grid>\r\n            <Grid item xs={3} spacing={1} sm={9} >\r\n           </Grid>\r\n            <Grid item xs={12} spacing={1} sm={12}>\r\n          <Typography variant=\"h6\" component=\"h2\" >Deaths: {this.state.deaths!=null?this.state.deaths:<div></div>}</Typography>\r\n           </Grid> \r\n            <Grid item xs={3} spacing={1} sm={9} >\r\n           </Grid>\r\n           <Grid item xs={12} spacing={1} sm={12}>\r\n          <Typography variant=\"h6\" component=\"h2\" >Total Vaccienes Given:{this.state.totalvac!=null?this.state.totalvac:<div></div>}</Typography>\r\n           </Grid>\r\n           \r\n            <Grid item xs={3} spacing={1} sm={2} >\r\n           </Grid>\r\n           <Grid item xs={12} spacing={1} sm={10}>\r\n          \r\n         \r\n          </Grid>\r\n           <Grid item xs={3} spacing={1} sm={3} >\r\n           </Grid>\r\n                     <Grid item xs={12} spacing={1} sm={9}  >\r\n\r\n                          <Graph style={section}/>\r\n                         \r\n\r\n                               </Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\LeafletControlGeocoder.jsx",["108","109"],"import { useEffect } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\nimport L from \"leaflet\";\r\nimport { withLeaflet } from \"react-leaflet\";\r\n\r\nimport icon from \"./constants\";\r\nfunction LeafletControlGeocoder(props) {\r\n  const { map } = props.map;\r\n\r\n  useEffect(() => {\r\n    var geocoder = L.Control.Geocoder.nominatim();\r\n    if (typeof URLSearchParams !== \"undefined\" && window.location.search) {\r\n      // parse /?geocoder=nominatim from URL\r\n      var params = new URLSearchParams(window.location.search);\r\n      var geocoderString = params.get(\"geocoder\");\r\n      if (geocoderString && L.Control.Geocoder[geocoderString]) {\r\n        geocoder = L.Control.Geocoder[geocoderString]();\r\n      } else if (geocoderString) {\r\n        console.warn(\"Unsupported geocoder\", geocoderString);\r\n      }\r\n    }\r\n\r\n    L.Control.geocoder({\r\n      query: \"\",\r\n      placeholder: \"Search here...\",\r\n      defaultMarkGeocode: false,\r\n      geocoder\r\n    })\r\n      .on(\"markgeocode\", function (e) {\r\n        var latlng = e.geocode.center;\r\n        L.marker(latlng, { icon })\r\n          .addTo(map)\r\n          .bindPopup(e.geocode.name)\r\n          .openPopup();\r\n        map.fitBounds(e.geocode.bbox);\r\n      })\r\n      .addTo(map);\r\n  }, []);\r\n\r\n  return null;\r\n}\r\nexport default withLeaflet(LeafletControlGeocoder)","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\RiskGauge.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport axios from 'axios';\r\nimport Chart from \"react-google-charts\";\r\nimport Component from \"react-google-charts\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nfunction handleClick() {\r\n  \r\n}\r\n\r\n\r\nclass Graph extends React.Component {\r\n state = { personalRisk:0,locationRisk:0};\r\n\r\n \r\n componentDidMount() {\r\n   var position=[]\r\n    navigator.geolocation.getCurrentPosition((position)=> {\r\n position=position\r\n })\r\n }\r\n \r\n render() {\r\n      handleClick=() => {\r\n        console.log('working')\r\n        this.props.history.push('/Calculator') \r\n      }\r\n        \r\n      \r\n  console.log(window.localStorage.getItem('userRisk'))\r\nthis.state.locationRisk=window.localStorage.getItem(\"locationRisk\")!=null?this.state.locationRisk=Number(window.localStorage.getItem(\"locationRisk\")):this.state.locationRisk=0\r\nthis.state.personalRisk=window.localStorage.getItem(\"userRisk\")!=null?this.state.personalRisk=Number(window.localStorage.getItem(\"userRisk\")):this.state.personalRisk=0\r\n\r\nconst locationRisk=this.state.locationRisk\r\nconst personalRisk=this.state.personalRisk\r\nif(personalRisk!=null&&locationRisk!=null){\r\n  this.state.total= locationRisk+personalRisk/2\r\n}\r\nelse{\r\n  this.state.total=0\r\n}\r\nconst total=this.state.total\r\n\r\nconsole.log(typeof Number(locationRisk),typeof Number(personalRisk),typeof total)\r\n\r\n        return (\r\n<div>\r\n\r\n\r\n      <Chart\r\n        width={400}\r\n        height={120}\r\n        chartType=\"Gauge\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Label', 'Value'],\r\n          ['Personal', personalRisk],\r\n          ['Location', locationRisk],\r\n          ['Total', total]\r\n        ]}\r\n        options={{\r\n          majorTicks:1,\r\n          max:5,\r\n          greenFrom:0,\r\n          greenTo:1.5,\r\n          redFrom: 3.5,\r\n          redTo: 5,\r\n          yellowFrom: 1.5,\r\n          yellowTo: 3.5,\r\n          minorTicks: 5,\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n                {personalRisk == 0?<Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Calculate Personal Risk</Button>:<div></div>}\r\n\r\n    </div>\r\n  \r\n  )\r\n  }\r\n}\r\nexport default withRouter(Graph)","C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\map\\constants.js",[],["125","126"],"C:\\Users\\marti\\Desktop\\4thYearsem2\\fyp\\application\\src\\components\\Home\\Graph.js",["127","128","129","130"],"import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport axios from 'axios';\r\nimport Chart from \"react-google-charts\";\r\n\r\n\r\n\r\n\r\nexport default class Graph extends React.Component {\r\n state = { areaData : [] ,position:null};\r\n    \r\n\r\n  \r\n      componentDidMount() {\r\n        var position=[]\r\n         navigator.geolocation.getCurrentPosition((position)=> {\r\n    \r\n      position=position\r\n\r\n\r\n\r\n    axios.get(`http://178.62.61.92:3101/getLocalData?lat=${position.coords.latitude}&lon=${position.coords.longitude}`)\r\n      .then(res => {\r\n        var data = res.data;\r\n        console.log(areaData)\r\n        var areaData=[]\r\n        for (var i=0; i<data.length-1; i++){\r\n            areaData.push([new Date(data[i].date),data[i].amount])\r\n        }\r\n        areaData.sort((a,b)=>a[0].getTime()-b[0].getTime());\r\n      for (var i=0; i<data.length-1; i++){\r\n            areaData[i][0]=areaData[i][0].toISOString().slice(5,10).replace('-','/')\r\n        }\r\n        areaData.location=data[0].location\r\n        areaData.unshift(['Date','Cases per 100k'])\r\n        console.log(areaData[areaData.length-1][1])\r\n        window.localStorage.setItem('locationRisk',Math.round((areaData[areaData.length-1][1]/200)*10)/10)\r\n        console.log(window.localStorage.getItem('locationRisk'))\r\n        this.setState({ areaData });\r\n\r\n    });\r\n    \r\n    \r\n\r\n      })\r\n      }\r\n    render() {\r\n      const options = {\r\n title: `Cases In ${this.state.areaData.location}`,\r\n   curveType: \"function\",\r\n  legend: { position: \"bottom\" }\r\n};\r\n        return (\r\n\r\n  <Paper>\r\n     <Chart\r\n          chartType=\"LineChart\"\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n          data={this.state.areaData}\r\n          options={options}\r\n        />\r\n  </Paper>\r\n  )\r\n  }\r\n}\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"140","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"141","line":13,"column":3,"nodeType":"137","messageId":"138","endLine":13,"endColumn":9},{"ruleId":"135","severity":1,"message":"142","line":15,"column":3,"nodeType":"137","messageId":"138","endLine":15,"endColumn":7},{"ruleId":"135","severity":1,"message":"143","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"144","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":22},{"ruleId":"135","severity":1,"message":"145","line":16,"column":8,"nodeType":"137","messageId":"138","endLine":16,"endColumn":12},{"ruleId":"135","severity":1,"message":"146","line":62,"column":22,"nodeType":"137","messageId":"138","endLine":62,"endColumn":33},{"ruleId":"135","severity":1,"message":"147","line":4,"column":23,"nodeType":"137","messageId":"138","endLine":4,"endColumn":28},{"ruleId":"135","severity":1,"message":"148","line":4,"column":29,"nodeType":"137","messageId":"138","endLine":4,"endColumn":35},{"ruleId":"135","severity":1,"message":"149","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":7,"column":13,"nodeType":"137","messageId":"138","endLine":7,"endColumn":16},{"ruleId":"135","severity":1,"message":"151","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":9},{"ruleId":"135","severity":1,"message":"152","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":30},{"ruleId":"135","severity":1,"message":"153","line":19,"column":8,"nodeType":"137","messageId":"138","endLine":19,"endColumn":19},{"ruleId":"135","severity":1,"message":"154","line":20,"column":8,"nodeType":"137","messageId":"138","endLine":20,"endColumn":14},{"ruleId":"135","severity":1,"message":"155","line":32,"column":10,"nodeType":"137","messageId":"138","endLine":32,"endColumn":17},{"ruleId":"135","severity":1,"message":"156","line":77,"column":9,"nodeType":"137","messageId":"138","endLine":77,"endColumn":22},{"ruleId":"135","severity":1,"message":"157","line":124,"column":7,"nodeType":"137","messageId":"138","endLine":124,"endColumn":11},{"ruleId":"135","severity":1,"message":"158","line":127,"column":7,"nodeType":"137","messageId":"138","endLine":127,"endColumn":9},{"ruleId":"159","severity":1,"message":"160","line":156,"column":27,"nodeType":"161","messageId":"162","endLine":156,"endColumn":29},{"ruleId":"135","severity":1,"message":"163","line":238,"column":11,"nodeType":"137","messageId":"138","endLine":238,"endColumn":14},{"ruleId":"135","severity":1,"message":"164","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"165","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":21},{"ruleId":"135","severity":1,"message":"141","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"135","severity":1,"message":"166","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":24},{"ruleId":"135","severity":1,"message":"167","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":17},{"ruleId":"135","severity":1,"message":"168","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":16},{"ruleId":"135","severity":1,"message":"169","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":12},{"ruleId":"135","severity":1,"message":"170","line":14,"column":8,"nodeType":"137","messageId":"138","endLine":14,"endColumn":19},{"ruleId":"135","severity":1,"message":"171","line":96,"column":10,"nodeType":"137","messageId":"138","endLine":96,"endColumn":14},{"ruleId":"135","severity":1,"message":"172","line":96,"column":16,"nodeType":"137","messageId":"138","endLine":96,"endColumn":23},{"ruleId":"135","severity":1,"message":"173","line":98,"column":9,"nodeType":"137","messageId":"138","endLine":98,"endColumn":13},{"ruleId":"135","severity":1,"message":"174","line":133,"column":9,"nodeType":"137","messageId":"138","endLine":133,"endColumn":19},{"ruleId":"135","severity":1,"message":"175","line":137,"column":9,"nodeType":"137","messageId":"138","endLine":137,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":186,"column":1,"nodeType":"178","messageId":"179","endLine":192,"endColumn":3},{"ruleId":"135","severity":1,"message":"180","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":11},{"ruleId":"135","severity":1,"message":"154","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":14},{"ruleId":"135","severity":1,"message":"181","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":15},{"ruleId":"135","severity":1,"message":"182","line":13,"column":16,"nodeType":"137","messageId":"138","endLine":13,"endColumn":40},{"ruleId":"135","severity":1,"message":"183","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":40,"column":6,"nodeType":"186","endLine":40,"endColumn":8,"suggestions":"187"},{"ruleId":"135","severity":1,"message":"188","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"189","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"190","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":17},{"ruleId":"135","severity":1,"message":"191","line":22,"column":8,"nodeType":"137","messageId":"138","endLine":22,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":24,"column":11,"nodeType":"137","messageId":"194","endLine":24,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":29,"column":7,"nodeType":"137","messageId":"197","endLine":29,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":36,"column":1,"nodeType":"200","endLine":36,"endColumn":11},{"ruleId":"198","severity":1,"message":"199","line":36,"column":75,"nodeType":"200","endLine":36,"endColumn":85},{"ruleId":"198","severity":1,"message":"199","line":36,"column":151,"nodeType":"200","endLine":36,"endColumn":161},{"ruleId":"198","severity":1,"message":"199","line":37,"column":1,"nodeType":"200","endLine":37,"endColumn":11},{"ruleId":"198","severity":1,"message":"199","line":37,"column":71,"nodeType":"200","endLine":37,"endColumn":81},{"ruleId":"198","severity":1,"message":"199","line":37,"column":143,"nodeType":"200","endLine":37,"endColumn":153},{"ruleId":"198","severity":1,"message":"199","line":42,"column":3,"nodeType":"200","endLine":42,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":45,"column":3,"nodeType":"200","endLine":45,"endColumn":13},{"ruleId":"201","severity":1,"message":"202","line":79,"column":31,"nodeType":"203","messageId":"204","endLine":79,"endColumn":33},{"ruleId":"131","replacedBy":"205"},{"ruleId":"133","replacedBy":"206"},{"ruleId":"135","severity":1,"message":"191","line":16,"column":13,"nodeType":"137","messageId":"138","endLine":16,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":19,"column":16,"nodeType":"137","messageId":"194","endLine":19,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":26,"column":21,"nodeType":"137","messageId":"209","endLine":26,"endColumn":29},{"ruleId":"210","severity":1,"message":"211","line":32,"column":16,"nodeType":"137","messageId":"212","endLine":32,"endColumn":17},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'LeafletMap' is defined but never used.","'Calculator' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","'FormHelperText' is defined but never used.","'Card' is defined but never used.","'setRedirect' is assigned a value but never used.","'Popup' is defined but never used.","'Marker' is defined but never used.","'Routing' is defined but never used.","'ELG' is defined but never used.","'L' is defined but never used.","'LeafletControlGeocoder' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'getData' is defined but never used.","'percentColors' is assigned a value but never used.","'from' is assigned a value but never used.","'to' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'map' is assigned a value but never used.","'Typography' is defined but never used.","'AccountCircle' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'CssBaseline' is defined but never used.","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'open' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Box' is defined but never used.","'Chart' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'useMap' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'Paper' is defined but never used.","'axios' is defined but never used.","'Component' is defined but never used.","'position' is assigned a value but never used.","no-self-assign","'position' is assigned to itself.","selfAssignment","no-func-assign","'handleClick' is a function.","isAFunction","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["213"],["214"],"no-use-before-define","'areaData' was used before it was defined.","usedBeforeDefined","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},"Update the dependencies array to be: [map]",{"range":"218","text":"219"},[1354,1356],"[map]"]